package codsoft;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class StudentManagementSystem {

    public static class Student {
        String studentName;
        int studentRollNumber;
        String studentGrade;

        Student(String studentName, int studentRollNumber, String studentGrade) {
            this.studentName = studentName;
            this.studentRollNumber = studentRollNumber;
            this.studentGrade = studentGrade;
        }

        public String getStudentName() {
            return studentName;
        }

        public int getStudentRollNumber() {
            return studentRollNumber;
        }

        public String getStudentGrade() {
            return studentGrade;
        }
    }

    public List<Student> students;
    FileWriter fileWriter;

    public StudentManagementSystem() throws IOException {
        students = new ArrayList<>();
        File file = new File("C:\\task5\\final_data.txt");
        if (!file.exists()) {
            file.createNewFile();
        }
        fileWriter = new FileWriter(file, true);
        String title = "Student Management System";
        int width = 60;
        int titleWidth = title.length();
        int padding = (width - titleWidth) / 2;
        fileWriter.write(String.format("%" + padding + "s%s%" + padding + "s%n", "", title, ""));
        fileWriter.write(String.format("%s%n", new String(new char[width]).replace('\0', '*')));
        fileWriter.write(String.format("%-20s %-20s %-20s%n", "Name", "Roll Number", "Grade"));
        fileWriter.write(String.format("%s%n", new String(new char[width]).replace('\0', '*')));
    }

    public void addStudent(Student student) throws IOException {
        students.add(student);
        System.out.println("Student added successfully.");
        String studentInfo = String.format("%-20s %-20d %-20s%n", student.studentName, student.studentRollNumber, student.studentGrade);
        fileWriter.write(studentInfo);
        fileWriter.flush();
    }

    public void removeStudent(int rollNumber) {
        boolean removed = false;
        for (int i = 0; i < students.size(); i++) {
            Student student = students.get(i);
            if (student.getStudentRollNumber() == rollNumber) {
                students.remove(i);
                removed = true;
                System.out.println("Student removed successfully.");
                break;
            }
        }
        if (!removed) {
            System.out.println("Student not found with roll number: " + rollNumber);
        }
    }

    public void searchStudent(int rollNumber) {
        for (Student student : students) {
            if (student.getStudentRollNumber() == rollNumber) {
                System.out.println("Student found:");
                System.out.println("Name: " + student.getStudentName());
                System.out.println("Roll Number: " + student.getStudentRollNumber());
                System.out.println("Grade: " + student.getStudentGrade());
                return;
            }
        }
        System.out.println("Student not found with roll number: " + rollNumber);
    }

    public void displayAllStudents() {
        if (students.isEmpty()) {
            System.out.println("No students found.");
        } else {
            System.out.println("All Students:");
            for (Student student : students) {
                System.out.println("Student:");
                System.out.println("Name: " + student.getStudentName());
                System.out.println("Roll Number: " + student.getStudentRollNumber());
                System.out.println("Grade: " + student.getStudentGrade());
                System.out.println();
            }
        }
    }

    public void closeFile() throws IOException {
        fileWriter.close();
    }

    public static void main(String[] args) throws IOException {
        StudentManagementSystem system = new StudentManagementSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Student Management System");
            System.out.println("1. Add Student");
            System.out.println("2. Remove Student");
            System.out.println("3. Search Student");
            System.out.println("4. Display All Students");
            System.out.println("5. Exit");
            System.out.println("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine();

            if (choice == 1) {
                System.out.println("Enter name: ");
                String studentName = scanner.nextLine();

                System.out.println("Enter roll number: ");
                int studentRollNumber = scanner.nextInt();
                scanner.nextLine();

                System.out.println("Enter grade: ");
                String studentGrade = scanner.nextLine();

                Student student = new Student(studentName, studentRollNumber, studentGrade);
                system.addStudent(student);
            } else if (choice == 2) {
                System.out.println("Enter roll number of the student to remove: ");
                int removeRollNumber = scanner.nextInt();
                scanner.nextLine();
                system.removeStudent(removeRollNumber);
            } else if (choice == 3) {
                System.out.println("Enter roll number of the student to search: ");
                int searchRollNumber = scanner.nextInt();
                scanner.nextLine();
                system.searchStudent(searchRollNumber);
            } else if (choice == 4) {
                system.displayAllStudents();
            } else if (choice == 5) {
                System.out.println("Exiting the application. Goodbye!");
                system.closeFile();
                System.exit(0);
            } else {
                System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
